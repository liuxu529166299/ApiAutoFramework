{
  "uid" : "496e75738d8da403",
  "name" : "test_get_commonapi[case0]",
  "fullName" : "test_case.test_case.TestCase#test_get_commonapi",
  "historyId" : "9313aa4a09b937fada5e7c2157f4cd68",
  "time" : {
    "start" : 1606565191112,
    "stop" : 1606565191213,
    "duration" : 101
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'success1' == 'success'\n  - success\n  + success1\n  ?        +",
  "statusTrace" : "self = <test_case.test_case.TestCase object at 0x0000022416D1A820>\ncase = ['http://39.98.138.157:5000/api/login', '{\"username\":\"admin\",\"password\":\"123456\"}', '{\"content-type\": \"application/json\"}', 'post', 'json', 'success1', ...]\n\n    @pytest.mark.parametrize(\"case\", excelData().get_excel_data())\n    def test_get_commonapi(self, case):\n        # print(case)\n        url = case[0]\n        body = case[1]\n        header = case[2]\n        method = case[3]\n        method_type = case[4]\n        expect = case[5]\n        jsonpaths = case[6]\n        dependency = case[7]\n    \n        print(url + \"-\" + str(body) + \"-\" + str(\n            header) + \"-\" + method + \"-\" + method_type + \"-\" + expect + \"-\" + jsonpaths + \"-\" + dependency)\n        common = operator_Common()\n        LoggerInfo().logger().info(\"替换body中的空格换行特殊字符开始。。。。\")\n        body = body.replace('\\r', '').replace('\\n', '').replace('\\t', '') if body is not None else \"\"\n        #\n        LoggerInfo().logger().info(\"转换存在可变变量开始。。。。\")\n        # 假如body中存在变量获取符号，调用convertBody重新对变量进行转化\n        body = operatorConvert().convertBody(body) if body.find('$') >= 0 else body\n        header = operatorConvert().convertBody(header) if (header is not None and header.find('$') >= 0) else header\n        header = \"\" if header is None else header\n        res = common.request(method, url, method_type, body, header)\n        #\n        # # 判断dependency是否有值需要存储\n        #\n        if len(res.content) > 0 and dependency.find('/') < 0:\n            depend[dependency] = res.content\n        # 获取请求返回值\n        resjson = json.loads(res.content)\n        #\n        # 获得预期jsonpath路径下的值\n        result = jsonpath.jsonpath(resjson, expr=jsonpaths)\n        print(result)\n        # # code = res.status_code\n        # # print(code)\n        # 断言预期值和实际返回值对比\n>       assert expect.strip() == str(result[0])\nE       AssertionError: assert 'success1' == 'success'\nE         - success\nE         + success1\nE         ?        +\n\ntest_case\\test_case.py:57: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'success1' == 'success'\n  - success\n  + success1\n  ?        +",
    "statusTrace" : "self = <test_case.test_case.TestCase object at 0x0000022416D1A820>\ncase = ['http://39.98.138.157:5000/api/login', '{\"username\":\"admin\",\"password\":\"123456\"}', '{\"content-type\": \"application/json\"}', 'post', 'json', 'success1', ...]\n\n    @pytest.mark.parametrize(\"case\", excelData().get_excel_data())\n    def test_get_commonapi(self, case):\n        # print(case)\n        url = case[0]\n        body = case[1]\n        header = case[2]\n        method = case[3]\n        method_type = case[4]\n        expect = case[5]\n        jsonpaths = case[6]\n        dependency = case[7]\n    \n        print(url + \"-\" + str(body) + \"-\" + str(\n            header) + \"-\" + method + \"-\" + method_type + \"-\" + expect + \"-\" + jsonpaths + \"-\" + dependency)\n        common = operator_Common()\n        LoggerInfo().logger().info(\"替换body中的空格换行特殊字符开始。。。。\")\n        body = body.replace('\\r', '').replace('\\n', '').replace('\\t', '') if body is not None else \"\"\n        #\n        LoggerInfo().logger().info(\"转换存在可变变量开始。。。。\")\n        # 假如body中存在变量获取符号，调用convertBody重新对变量进行转化\n        body = operatorConvert().convertBody(body) if body.find('$') >= 0 else body\n        header = operatorConvert().convertBody(header) if (header is not None and header.find('$') >= 0) else header\n        header = \"\" if header is None else header\n        res = common.request(method, url, method_type, body, header)\n        #\n        # # 判断dependency是否有值需要存储\n        #\n        if len(res.content) > 0 and dependency.find('/') < 0:\n            depend[dependency] = res.content\n        # 获取请求返回值\n        resjson = json.loads(res.content)\n        #\n        # 获得预期jsonpath路径下的值\n        result = jsonpath.jsonpath(resjson, expr=jsonpaths)\n        print(result)\n        # # code = res.status_code\n        # # print(code)\n        # 断言预期值和实际返回值对比\n>       assert expect.strip() == str(result[0])\nE       AssertionError: assert 'success1' == 'success'\nE         - success\nE         + success1\nE         ?        +\n\ntest_case\\test_case.py:57: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a66c70c69e570f76",
      "name" : "log",
      "source" : "a66c70c69e570f76.txt",
      "type" : "text/plain",
      "size" : 265
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "subSuite",
    "value" : "TestCase"
  }, {
    "name" : "host",
    "value" : "DESKTOP-V3922JD"
  }, {
    "name" : "thread",
    "value" : "1592-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "['http://39.98.138.157:5000/api/login', '{\"username\":\"admin\",\"password\":\"123456\"}', '{\"content-type\": \"application/json\"}', 'post', 'json', 'success1', '$.msg', 'loginvar']"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "f342ecbf588804e1",
      "status" : "passed",
      "time" : {
        "start" : 1606564674559,
        "stop" : 1606564674658,
        "duration" : 99
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "496e75738d8da403.json",
  "parameterValues" : [ "['http://39.98.138.157:5000/api/login', '{\"username\":\"admin\",\"password\":\"123456\"}', '{\"content-type\": \"application/json\"}', 'post', 'json', 'success1', '$.msg', 'loginvar']" ]
}