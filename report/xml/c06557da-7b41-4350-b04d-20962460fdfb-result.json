{"name": "test_get_commonapi[case0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '200' == 'success'\n  - success\n  + 200", "trace": "self = <test_case.test_case1.TestCase object at 0x000001E32DA39BB0>\ncase = ['http://39.98.138.157:5000/api/login', '{\"username\":\"admin\",\"password\":\"123456\"}', '{\"content-type\": \"application/json\"}', 'post', 'json', 'success,200', ...]\n\n    @pytest.mark.parametrize(\"case\", excelData().get_excel_data())\n    def test_get_commonapi(self,case):\n        # print(case)\n        url = case[0]\n        body = case[1]\n        header = case[2]\n        method = case[3]\n        method_type = case[4]\n        expect = case[5]\n        jsonpaths = case[6]\n        dependency = case[7]\n    \n        # print(url + \"-\" + str(body) + \"-\" + str(\n        #     header) + \"-\" + method + \"-\" + method_type + \"-\" + expect + \"-\" + jsonpaths + \"-\" + dependency)\n        common = operator_Common()\n        # LoggerInfo().logger().info(\"替换body中的空格换行特殊字符开始。。。。\")\n        body = body.replace('\\r', '').replace('\\n', '').replace('\\t', '') if body is not None else \"\"\n        #\n        # LoggerInfo().logger().info(\"转换存在可变变量开始。。。。\")\n        # 假如body中存在变量获取符号，调用convertBody重新对变量进行转化\n        body = operatorConvert().convertBody(body) if body.find('$') >= 0 else body\n        header = operatorConvert().convertBody(header) if (header is not None and header.find('$') >= 0) else header\n        header = \"\" if header is None else header\n        res = common.request(method, url, method_type, body, header)\n        #\n        # # 判断dependency是否有值需要存储\n        #\n        if len(res.content) > 0 and dependency.find('/') < 0:\n            depend[dependency] = res.content\n        # 获取请求返回值\n        resjson = json.loads(res.content)\n        #\n        # 获得预期jsonpath路径下的值\n        result = jsonpath.jsonpath(resjson, expr=jsonpaths)\n        # print(result)\n        if expect.find(',') > 0:\n           expect = expect.split(\",\")\n           jsonpaths = jsonpaths.split(\",\")\n           num =0\n           for i, j in expect, jsonpaths:\n               assert i.strip() == str(result[num])\n>              assert j.strip() == str(result[num])\nE              AssertionError: assert '200' == 'success'\nE                - success\nE                + 200\n\ntest_case\\test_case1.py:59: AssertionError"}, "attachments": [{"name": "log", "source": "10371d6a-0b48-4ee4-a148-bac0b70130ac-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "['http://39.98.138.157:5000/api/login', '{\"username\":\"admin\",\"password\":\"123456\"}', '{\"content-type\": \"application/json\"}', 'post', 'json', 'success,200', '$.msg,$httpstatus', 'loginvar']"}], "start": 1606740186052, "stop": 1606740186151, "uuid": "df3d4a87-c169-49a9-aaaf-c0c6eb17ec43", "historyId": "f7895c10868ac82a2692d321878dd0ed", "testCaseId": "cc5e61e683b885a2c64aa13e82022f04", "fullName": "test_case.test_case1.TestCase#test_get_commonapi", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_case1"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "DESKTOP-V3922JD"}, {"name": "thread", "value": "1048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_case1"}]}